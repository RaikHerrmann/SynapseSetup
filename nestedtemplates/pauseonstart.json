{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_SynapsePauseSchedule_name": {
            "defaultValue": "SynapsePauseOnStart",
            "type": "String"
        },
        "utcValue": {
          "type": "string",
          "defaultValue": "[utcNow()]"
        },
        "location": {
          "type": "string"
        },
        "companyAcronym": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
    },
    "variables": {
        "year": "[substring(parameters('utcValue'), 0, 4)]",
        "month": "[substring(parameters('utcValue'), 4, 2)]",
        "day": "[substring(parameters('utcValue'), 6, 2)]",
        "hour": "[substring(parameters('utcValue'), 8, 2)]",
        "minutes": "[substring(parameters('utcValue'), 10, 2)]",
        "seconds": "[substring(parameters('utcValue'), 12, 2)]",
        "synapseWorkspaceName": "[toLower(concat(variables('synapseName'),'ws'))]",
        "synapseName": "[toLower(concat(parameters('companyAcronym')))]",
        "synapseSQLPoolName": "[toLower(concat(variables('workspaceName'),'sql1'))]",
        "workspaceName": "[toLower(concat(variables('synapseName'),'ws'))]",
        "getRESTAPI": "subscriptions/@{variables('RestAPIVariables')['SubscriptionId']}/resourceGroups/@{variables('RestAPIVariables')['ResourceGroupName']}/providers/Microsoft.Synapse/workspaces/@{variables('RestAPIVariables')['workspaceName']}/sqlPools/@{variables('RestAPIVariables')['sqlPoolName']}?api-version=2019-06-01-preview",
        "pauseRESTAPI": "subscriptions/@{variables('RestAPIVariables')['SubscriptionId']}/resourceGroups/@{variables('RestAPIVariables')['ResourceGroupName']}/providers/Microsoft.Synapse/workspaces/@{variables('RestAPIVariables')['workspaceName']}/sqlPools/@{variables('RestAPIVariables')['sqlPoolName']}/pause?api-version=2019-06-01-preview",
        "aqcRESTAPI": "subscriptions/@{variables('RestAPIVariables')['SubscriptionId']}/resourceGroups/@{variables('RestAPIVariables')['ResourceGroupName']}/providers/Microsoft.Synapse/workspaces/@{variables('RestAPIVariables')['WorkspaceName']}/sqlpools/@{variables('RestAPIVariables')['SQLPoolName']}/dataWarehouseUserActivities/current?api-version=2019-06-01-preview",
        "managementEndpoint": "[environment().resourceManager]"
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_SynapsePauseSchedule_name')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Month",
                                "interval": 1,
                                "startTime": "[concat(variables('year'),'-', variables('month'), '-', variables('day'), 'T', variables('hour'), ':', variables('minutes'), ':', variables('seconds'), 'Z')]",
                                "timeZone": "[parameters('timeZone')]"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Get_Synapse_state": {
                            "runAfter": {
                                "Initialize_ActiveQueryCount_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "uri": "[concat(variables('managementEndpoint'),variables('getRESTAPI'))]"
                            }
                        },
                        "Initialize_API_variables": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "RestAPIVariables",
                                        "type": "Object",
                                        "value": {
                                            "PauseTime": "[concat(variables('hour'), ':', variables('minutes'), ' PM')]",
                                            "ResourceGroupName": "[resourceGroup().name]",
                                            "ScheduleTimeZone": "[parameters('timeZone')]",
                                            "SubscriptionId": "[subscription().subscriptionId]",
                                            "TenantId": "[subscription().tenantId]",
                                            "sqlPoolName": "[variables('synapseSQLPoolName')]",
                                            "workspaceName": "[variables('synapseWorkspaceName')]"
                                        }
                                    }
                                ]
                            }
                        },
                        "Initialize_ActiveQueryCount_variable": {
                            "runAfter": {
                                "Initialize_API_variables": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ActiveQueryCount",
                                        "type": "Integer",
                                        "value": 1
                                    }
                                ]
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "Get_Synapse_state": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Get_Synapse_state')",
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "location": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "properties": {
                                            "properties": {
                                                "collation": {
                                                    "type": "string"
                                                },
                                                "creationDate": {
                                                    "type": "string"
                                                },
                                                "maxSizeBytes": {
                                                    "type": "integer"
                                                },
                                                "provisioningState": {
                                                    "type": "string"
                                                },
                                                "restorePointInTime": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "sku": {
                                            "properties": {
                                                "capacity": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "PauseSynapseIfOnline": {
                            "actions": {
                                "Pause_SQL_Pool": {
                                    "runAfter": {
                                        "Until_ZeroActiveQueries": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "method": "POST",
                                        "uri": "[concat(variables('managementEndpoint'),variables('pauseRESTAPI'))]"
                                    }
                                },
                                "Until_ZeroActiveQueries": {
                                    "actions": {
                                        "GetActiveQueryCount": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "method": "GET",
                                                "uri": "[concat(variables('managementEndpoint'),variables('aqcRESTAPI'))]"
                                            }
                                        },
                                        "Update_ActiveQueryCount_variable": {
                                            "runAfter": {
                                                "GetActiveQueryCount": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "ActiveQueryCount",
                                                "value": "@body('GetActiveQueryCount')['properties']['activeQueriesCount']"
                                            }
                                        },
                                        "Wait5minsIfActiveQuery": {
                                            "actions": {
                                                "Wait_5mins": {
                                                    "runAfter": {},
                                                    "type": "Wait",
                                                    "inputs": {
                                                        "interval": {
                                                            "count": 5,
                                                            "unit": "Minute"
                                                        }
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Update_ActiveQueryCount_variable": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "greater": [
                                                            "@variables('ActiveQueryCount')",
                                                            0
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": "@equals(variables('ActiveQueryCount'), 0)",
                                    "limit": {
                                        "count": 3,
                                        "timeout": "PT3H"
                                    },
                                    "type": "Until"
                                }
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@body('Get_Synapse_state')['properties']['status']",
                                            "Online"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        }
                    }
                },
                "parameters": {}
            }
        }
    ]
}